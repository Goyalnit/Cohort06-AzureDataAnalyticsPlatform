{
	"name": "df_hospital_icu_transform",
	"properties": {
		"description": "This to transform Hospitalization and ICU occupancy.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_hospital_icu_data",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionData"
				},
				{
					"dataset": {
						"referenceName": "ds_country_code_info",
						"type": "DatasetReference"
					},
					"name": "CountryandCodeInfo",
					"description": "This source contains country, country code 2 and 3 digit and population."
				},
				{
					"dataset": {
						"referenceName": "ds_Dim_Date",
						"type": "DatasetReference"
					},
					"name": "DimDate",
					"description": "Used for deriving new fields related to week_start_date, week_end_date"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectrequiredfieldshospital",
					"description": "Renaming HospitalAdmissionData to dfd with columns 'reported_date, reported_year_week and remove url"
				},
				{
					"name": "LookupCountry"
				},
				{
					"name": "selectRqdFields2",
					"description": "Remove continent"
				},
				{
					"name": "SplitintoDailyandWeekly",
					"description": "Add cases to distribute the data in multiple streams"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionData",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountryandCodeInfo",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimDate",
				"HospitalAdmissionData select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectrequiredfieldshospital",
				"selectrequiredfieldshospital, CountryandCodeInfo lookup(selectrequiredfieldshospital@country == CountryandCodeInfo@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> LookupCountry",
				"LookupCountry select(mapColumn(",
				"          country = selectrequiredfieldshospital@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country = CountryandCodeInfo@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRqdFields2",
				"selectRqdFields2 split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admissions per 100k',",
				"     disjoint: false) ~> SplitintoDailyandWeekly@(Weekly, Daily)"
			]
		}
	}
}